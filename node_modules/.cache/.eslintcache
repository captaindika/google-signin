[{"/home/dk/Desktop/learning/calendar/frontend/src/index.js":"1","/home/dk/Desktop/learning/calendar/frontend/src/reportWebVitals.js":"2","/home/dk/Desktop/learning/calendar/frontend/src/App.js":"3"},{"size":500,"mtime":1643928272279,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1643928272283,"results":"6","hashOfConfig":"5"},{"size":3386,"mtime":1654848657514,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"egujag",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/home/dk/Desktop/learning/calendar/frontend/src/index.js",[],[],["19","20"],"/home/dk/Desktop/learning/calendar/frontend/src/reportWebVitals.js",[],[],"/home/dk/Desktop/learning/calendar/frontend/src/App.js",["21","22","23","24"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { GoogleLogin } from 'react-google-login'\nimport axios from 'axios'\nimport { useState } from 'react';\nimport { gapi } from \"gapi-script\";\nfunction App() {\n\n  const responseGoogle = response => {\n    const { code } = response\n    console.log(code)\n    setToken(code)\n    // axios.post('/api/v1/project-executive/create-token',{code})\n    // .then(response => {\n    //   console.log({data: response.data, msg: 'ini response'})\n    //   setSignIn(true)\n    // })\n    // .catch(error => {\n    //   console.log(error.message)\n    // })\n\n  }\n\n  const responseError = error => {\n    console.log('error bro');\n    console.log(error);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('asdasd')\n  }\n\n  const [summary, setSummary] = useState('')\n  const [description, setDescription] = useState('')\n  const [location, setLocation] = useState('')\n  const [startDateTime, setStartDateTime] = useState('')\n  const [endDateTime, setEndDateTime] = useState('')\n  const [signIn, setSignIn] = useState(false)\n  const [token, setToken] = useState('')\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Google Calendar API</h1>\n      </div>\n      {\n        !signIn ? (<div>\n          <GoogleLogin\n            clientId='102371188678-1e1nbt8faq6ojk3hrr0hd8il1f8h8eiv.apps.googleusercontent.com'\n            // 102371188678-1e1nbt8faq6ojk3hrr0hd8il1f8h8eiv.apps.googleusercontent.com\n            // clientId='381577986964-scht8fd1d758n3sv5u6jmga46t5h2gfi.apps.googleusercontent.com'\n            buttonText='Sign in & Authorize Calendar'\n            // render={renderProps => (\n            //   <button onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</button>\n            // )}\n            onSuccess={responseGoogle}\n            onFailure={responseError}\n            cookiePolicy={'single_host_origin'}\n            responseType='code'\n            accessType='offline'\n            scope='openid email profile https://www.googleapis.com/auth/calendar' />\n          <p>{token}</p>\n        </div>) : (<div>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor='summary'>Summary</label>\n            <br />\n            <input type='text' id=\"summary\" value={summary} onChange={e => setSummary(e.target.value)} />\n            <br />\n            <label htmlFor='description'>Description</label>\n            <br />\n            <textarea type='text' id=\"description\" value={description} onChange={e => setDescription(e.target.value)} />\n            <br />\n            <label htmlFor='location'>Location</label>\n            <br />\n            <input type='text' id=\"location\" value={location} onChange={e => setLocation(e.target.value)} />\n            <br />\n            <label htmlFor='startDateTime'>Start date time</label>\n            <br />\n            <input type='datetime-local' id=\"startDateTime\" value={startDateTime} onChange={e => setStartDateTime(e.target.value)} />\n            <br />\n            <label htmlFor='endDateTime'>End date time</label>\n            <br />\n            <input type='datetime-local' id=\"endDateTime\" value={endDateTime} onChange={e => setEndDateTime(e.target.value)} />\n            <br />\n            <button type='submit'>Create event</button>\n          </form>\n        </div>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":4,"column":8,"nodeType":"31","messageId":"32","endLine":4,"endColumn":13},{"ruleId":"29","severity":1,"message":"34","line":6,"column":10,"nodeType":"31","messageId":"32","endLine":6,"endColumn":14},{"ruleId":"29","severity":1,"message":"35","line":39,"column":18,"nodeType":"31","messageId":"32","endLine":39,"endColumn":27},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'gapi' is defined but never used.","'setSignIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]